get:
  tags:
    - Request
  summary: Get customer requests
  description: >-
    This method returns all customer requests for the user executing the query.


    The returned customer requests are ordered chronologically by the latest
    activity on each request. For example, the latest status transition or
    comment.


    **[Permissions](#permissions) required**: Permission to access the specified
    service desk.


    **Response limitations**: For customers, the list returned will include
    request they created (or were created on their behalf) or are participating
    in only.
  operationId: getCustomerRequests
  parameters:
    - name: searchTerm
      in: query
      description: >-
        Filters customer requests where the request summary matches the
        `searchTerm`.
        [Wildcards](https://confluence.atlassian.com/display/JIRACORECLOUD/Search+syntax+for+text+fields)
        can be used in the `searchTerm` parameter.
      schema:
        type: string
    - name: requestOwnership
      in: query
      description: >-
        Filters customer requests using the following values:

         *  `OWNED_REQUESTS` returns customer requests where the user is the creator.
         *  `PARTICIPATED_REQUESTS` returns customer requests where the user is a participant.
         *  `ORGANIZATION` returns customer requests for an organization of which the user is a member when used in conjunction with `organizationId`.
         *  `ALL_ORGANIZATIONS` returns customer requests that belong to all organizations of which the user is a member.
         *  `APPROVER` returns customer requests where the user is an approver. Can be used in conjunction with `approvalStatus` to filter pending or complete approvals.
         *  `ALL_REQUESTS` returns all customer requests. **Deprecated and will be removed, as the returned requests may change if more values are added in the future. Instead, explicitly list the desired filtering strategies.**

        Multiple values of the query parameter are supported. For example,
        `requestOwnership=OWNED_REQUESTS&requestOwnership=PARTICIPATED_REQUESTS`
        will only return customer requests where the user is the creator or a
        participant. If not specified, filtering defaults to `OWNED_REQUESTS`,
        `PARTICIPATED_REQUESTS`, and `ALL_ORGANIZATIONS`.
      schema:
        type: array
        items:
          type: string
    - name: requestStatus
      in: query
      description: >-
        Filters customer requests where the request is closed, open, or either
        of the two where:

         *  `CLOSED_REQUESTS` returns customer requests that are closed.
         *  `OPEN_REQUESTS` returns customer requests that are open.
         *  `ALL_REQUESTS` returns all customer requests.
      schema:
        type: string
    - name: approvalStatus
      in: query
      description: |-
        Filters results to customer requests based on their approval status:

         *  `MY_PENDING_APPROVAL` returns customer requests pending the user's approval.
         *  `MY_HISTORY_APPROVAL` returns customer requests where the user was an approver.

        **Note**: Valid only when used with requestOwnership=APPROVER.
      schema:
        type: string
    - name: organizationId
      in: query
      description: >-
        Filters customer requests that belong to a specific organization (note
        that the user must be a member of that organization). **Note**: Valid
        only when used with requestOwnership=ORGANIZATION.
      schema:
        type: integer
        format: int32
    - name: serviceDeskId
      in: query
      description: Filters customer requests by service desk.
      schema:
        type: integer
        format: int32
    - name: requestTypeId
      in: query
      description: >-
        Filters customer requests by request type. Note that the `serviceDeskId`
        must be specified for the service desk in which the request type
        belongs.
      schema:
        type: integer
        format: int32
    - name: expand
      in: query
      description: >-
        A multi-value parameter indicating which properties of the customer
        request to expand, where:

         *  `serviceDesk` returns additional details for each service desk.
         *  `requestType` returns additional details for each request type.
         *  `participant` returns the participant details, if any, for each customer request.
         *  `sla` returns the SLA information on each customer request.
         *  `status` returns the status transitions, in chronological order, for each customer request.
         *  `attachment` returns the attachments for the customer request.
         *  `action` returns the actions that the user can or cannot perform on this customer request.
         *  `comment` returns the comments, if any, for each customer request.
         *  `comment.attachment` returns the attachment details, if any, for each comment.
         *  `comment.renderedBody` (Experimental) returns the rendered body in HTML format (in addition to the raw body) for each comment.
      schema:
        type: array
        items:
          type: string
    - name: start
      in: query
      description: >-
        The starting index of the returned objects. Base index: 0. See the
        [Pagination](#pagination) section for more details.
      schema:
        type: integer
        format: int32
    - name: limit
      in: query
      description: >-
        The maximum number of items to return per page. Default: 50. See the
        [Pagination](#pagination) section for more details.
      schema:
        type: integer
        format: int32
  responses:
    '200':
      description: Returns the customer requests, on the specified page of the results.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/PagedDTOCustomerRequestDTO.yaml
          example: >-
            {"_expands":["participant","status","sla","requestType","serviceDesk","attachment","action","comment"],"size":3,"start":3,"limit":3,"isLastPage":false,"_links":{"base":"https://your-domain.atlassian.net/rest/servicedeskapi","context":"context","next":"https://your-domain.atlassian.net/rest/servicedeskapi/request?start=6&limit=3","prev":"https://your-domain.atlassian.net/rest/servicedeskapi/request?start=0&limit=3"},"values":[{"_expands":["participant","status","sla","requestType","serviceDesk","attachment","action","comment"],"issueId":"107001","issueKey":"HELPDESK-1","requestTypeId":"25","serviceDeskId":"10","createdDate":{"iso8601":"2015-10-08T14:42:00+0700","jira":"2015-10-08T14:42:00.000+0700","friendly":"Monday
            14:42
            PM","epochMillis":1444290120000},"reporter":{"accountId":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","name":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","key":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","emailAddress":"fred@example.com","displayName":"Fred
            F.
            User","active":true,"timeZone":"Australia/Sydney","_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue"},"self":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b"}},"requestFieldValues":[{"fieldId":"summary","label":"What
            do you need?","value":"Request JSD help via
            REST"},{"fieldId":"description","label":"Why do you need
            this?","value":"I need a new *mouse* for my
            Mac","renderedValue":{"html":"<p>I need a new <b>mouse</b> for my
            Mac</p>"}}],"currentStatus":{"status":"Waiting for
            Support","statusCategory":"NEW","statusDate":{"iso8601":"2015-10-08T14:01:00+0700","jira":"2015-10-08T14:01:00.000+0700","friendly":"Today
            14:01
            PM","epochMillis":1444287660000}},"_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/issue/107001","web":"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-1","self":"https://your-domain.atlassian.net/rest/servicedeskapi/request/107001","agent":"https://your-domain.atlassian.net/browse/HELPDESK-1"}},{"_expands":["participant","status","sla","requestType","serviceDesk","attachment","action","comment"],"issueId":"107002","issueKey":"HELPDESK-2","requestTypeId":"25","serviceDeskId":"10","createdDate":{"iso8601":"2015-10-08T14:30:00+0700","jira":"2015-10-08T14:30:00.000+0700","friendly":"Monday
            14:30
            PM","epochMillis":1444289400000},"reporter":{"accountId":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","name":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","key":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","emailAddress":"fred@example.com","displayName":"Fred
            F.
            User","active":true,"timeZone":"Australia/Sydney","_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue"},"self":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b"}},"requestFieldValues":[{"fieldId":"summary","label":"What
            do you need?","value":"Request a new
            account"},{"fieldId":"description","label":"Why do you need
            this?","value":"Create an account on
            Jira"}],"currentStatus":{"status":"Waiting for
            Support","statusCategory":"NEW","statusDate":{"iso8601":"2015-10-08T14:01:00+0700","jira":"2015-10-08T14:01:00.000+0700","friendly":"Today
            14:01
            PM","epochMillis":1444287660000}},"_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/issue/107002","web":"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-2","self":"https://your-domain.atlassian.net/rest/servicedeskapi/request/107002","agent":"https://your-domain.atlassian.net/browse/HELPDESK-2"}},{"_expands":["participant","status","sla","requestType","serviceDesk","attachment","action","comment"],"issueId":"109006","issueKey":"SIMPLEDESK-6","requestTypeId":"33","serviceDeskId":"12","createdDate":{"iso8601":"2015-10-05T14:30:00+0700","jira":"2015-10-05T14:30:00.000+0700","friendly":"Monday
            14:30
            PM","epochMillis":1444030200000},"reporter":{"accountId":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","name":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","key":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","emailAddress":"fred@example.com","displayName":"Fred
            F.
            User","active":true,"timeZone":"Australia/Sydney","_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue"},"self":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b"}},"requestFieldValues":[{"fieldId":"summary","label":"Summarize
            the problem","value":"Printer on level 3 did not
            work"},{"fieldId":"description","value":"Ink cartridge is
            empty"}],"currentStatus":{"status":"Waiting for
            Support","statusCategory":"NEW","statusDate":{"iso8601":"2015-10-08T14:00:00+0700","jira":"2015-10-08T14:00:00.000+0700","friendly":"Today
            14:00
            PM","epochMillis":1444287600000}},"_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/issue/109006","web":"https://your-domain.atlassian.net/servicedesk/customer/portal/12/SIMPLEDESK-6","self":"https://your-domain.atlassian.net/rest/servicedeskapi/request/109006","agent":"https://your-domain.atlassian.net/browse/SIMPLEDESK-6"}}]}
    '401':
      description: Returned if the user is not logged in.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
    '404':
      description: >-
        Returned if the user does not have permission to access the service
        desk, the service desk does not exist, or the service desk does not
        support the request type.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
    '500':
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
  deprecated: false
  security:
    - OAuth2:
        - read:servicedesk-request
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - read:servicedesk-request
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:request:jira-service-management
        - read:user:jira
  x-atlassian-connect-scope: READ
post:
  tags:
    - Request
  summary: Create customer request
  description: >-
    This method creates a customer request in a service desk.


    The JSON request must include the service desk and customer request type, as
    well as any fields that are required for the request type. A list of the
    fields required by a customer request type can be obtained using
    [servicedesk/\{serviceDeskId\}/requesttype/\{requestTypeId\}/field](#api-servicedesk-serviceDeskId-requesttype-requestTypeId-field-get).


    The fields required for a customer request type depend on the user's
    permissions:

     *  `raiseOnBehalfOf` is not available to Users who have the customer permission only.
     *  `requestParticipants` is not available to Users who have the customer permission only or if the feature is turned off for customers.

    `requestFieldValues` is a map of Jira field IDs and their values. See [Field
    input formats](#fieldformats), for details of each field's JSON semantics
    and the values they can take.


    **[Permissions](#permissions) required**: Permission to create requests in
    the specified service desk.
  operationId: createCustomerRequest
  requestBody:
    content:
      application/json:
        schema:
          $ref: ../components/schemas/RequestCreateDTO.yaml
        example:
          requestParticipants:
            - qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d69abfa3980ce712caae
          serviceDeskId: '10'
          requestTypeId: '25'
          requestFieldValues:
            summary: Request JSD help via REST
            description: I need a new *mouse* for my Mac
    required: true
  responses:
    '201':
      description: Returned if the customer request was created.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/CustomerRequestDTO.yaml
          example: >-
            {"_expands":["participant","status","sla","requestType","serviceDesk","attachment","action","comment"],"issueId":"107001","issueKey":"HELPDESK-1","requestTypeId":"25","serviceDeskId":"10","createdDate":{"iso8601":"2015-10-08T14:42:00+0700","jira":"2015-10-08T14:42:00.000+0700","friendly":"Monday
            14:42
            PM","epochMillis":1444290120000},"reporter":{"accountId":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","name":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","key":"qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","emailAddress":"fred@example.com","displayName":"Fred
            F.
            User","active":true,"timeZone":"Australia/Sydney","_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b","avatarUrls":{"48x48":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=48&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D48%26noRedirect%3Dtrue","24x24":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=24&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D24%26noRedirect%3Dtrue","16x16":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=16&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D16%26noRedirect%3Dtrue","32x32":"https://avatar-cdn.atlassian.com/9bc3b5bcb0db050c6d7660b28a5b86c9?s=32&d=https%3A%2F%2Fsecure.gravatar.com%2Favatar%2F9bc3b5bcb0db050c6d7660b28a5b86c9%3Fd%3Dmm%26s%3D32%26noRedirect%3Dtrue"},"self":"https://your-domain.atlassian.net/rest/api/2/user?username=qm:a713c8ea-1075-4e30-9d96-891a7d181739:5ad6d3581db05e2a66fa80b"}},"requestFieldValues":[{"fieldId":"summary","label":"What
            do you need?","value":"Request JSD help via
            REST"},{"fieldId":"description","label":"Why do you need
            this?","value":"I need a new *mouse* for my
            Mac","renderedValue":{"html":"<p>I need a new <b>mouse</b> for my
            Mac</p>"}}],"currentStatus":{"status":"Waiting for
            Support","statusCategory":"NEW","statusDate":{"iso8601":"2015-10-08T14:01:00+0700","jira":"2015-10-08T14:01:00.000+0700","friendly":"Today
            14:01
            PM","epochMillis":1444287660000}},"_links":{"jiraRest":"https://your-domain.atlassian.net/rest/api/2/issue/107001","web":"https://your-domain.atlassian.net/servicedesk/customer/portal/10/HELPDESK-1","self":"https://your-domain.atlassian.net/rest/servicedeskapi/request/107001","agent":"https://your-domain.atlassian.net/browse/HELPDESK-1"}}
    '400':
      description: Returned if the HTTP request call is invalid.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
    '401':
      description: Returned if the user is not logged in.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
    '403':
      description: Returned if the user does not have permission to complete this request.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
    '500':
      description: Internal Server Error.
      content:
        application/json:
          schema:
            $ref: ../components/schemas/ErrorResponse.yaml
  deprecated: false
  security:
    - OAuth2:
        - write:servicedesk-request
  x-atlassian-oauth2-scopes:
    - state: Current
      scheme: OAuth2
      scopes:
        - write:servicedesk-request
    - state: Beta
      scheme: OAuth2
      scopes:
        - read:request:jira-service-management
        - write:request:jira-service-management
        - read:user:jira
  x-atlassian-connect-scope: WRITE
